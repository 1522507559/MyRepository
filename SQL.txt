-- 创建数据库如不存在
CREATE DATABASE IF NOT EXISTS db5;
-- 创建数据库并指定字符集为gbk
CREATE DATABASE db6 DEFAULT CHARACTER SET gbk;
-- 查看所有数据库
SHOW DATABASES;
-- 查看某个数据库的定义信息
SHOW CREATE DATABASE db6;
-- 将db6的字符集改成utf8
ALTER DATABASE db6 CHARACTER SET utf8;
-- 删除数据库
DROP DATABASE db6;
-- 查看正在使用的数据库(使用一个mysql中的全局函数)
SELECT DATABASE();
-- 改变要使用的数据库
USE db5;
-- 创建学生表
CREATE TABLE stu(
	id INT,	          -- 整数
	NAME VARCHAR(20), -- 字符串	
	birthday DATE     -- 日期(年月日)，最后无逗号
);
-- 查看表
SHOW TABLES;
-- 查看表结构
DESC stu;
-- 查看创建表的sql语句，可查看到字符集等信息
SHOW CREATE TABLE stu;
-- 创建一个和stu一样的表
CREATE TABLE stu1 LIKE stu; -- 先是新表名，再试旧表名
-- 判断是否存在，如存在则删除
DROP TABLE IF EXISTS stu1;
-- 修改表结构
-- 添加表列(新字段)
ALTER TABLE stu ADD gender VARCHAR(8);
-- 将stu表中的gender字段改成varchar(5)
ALTER TABLE stu MODIFY gender VARCHAR(5);
-- 将stu表中的字段名gender改成sex，类型为varchar(10)
ALTER TABLE stu CHANGE gender sex VARCHAR(10);
-- 删除stu表中的sex
ALTER TABLE stu DROP sex;
-- 将学生表stu改成student
RENAME TABLE stu TO student;
-- 将student表的编码修改成gbk
ALTER TABLE student CHARACTER SET gbk;

DESC student;
-- 向学生表插入信息
INSERT INTO student (id, NAME, birthday) VALUES(1,'孙行者','1991-9-17');
INSERT INTO student (id, NAME, birthday) VALUES(2,'行者孙','1994-5-28');
INSERT INTO student (id, NAME, birthday) VALUES(2,'者行孙','1992-5-18');

-- 将一张已经存在的表中的数据复制到另一张表中(蠕虫复制)
CREATE TABLE stu LIKE student;
INSERT INTO stu SELECT * FROM student;
-- 如果只想复制id和name字段，两张表都写出相应的列名
CREATE TABLE student2 LIKE stu;
INSERT INTO student2 (id, NAME) SELECT id, NAME FROM stu;

-- 不带条件修改数据，将会把列的全部数据都会修改掉
UPDATE stu SET gender = '男';
-- 带条件修改
UPDATE stu SET gender = '女' WHERE id = 2;
-- 一次修改多列
UPDATE stu SET gender='男',NAME='杨过' WHERE id=1;
-- 删除数据
DELETE FROM stu WHERE id=3;
-- 删除表中所有数据(删除整张表，然后再创建一张新的列名一样的表)
TRUNCATE TABLE stu;
-- 明天看查询
SELECT * FROM stu;
-- 
UPDATE stu SET id=3 WHERE NAME='者行孙';
ALTER TABLE stu ADD address VARCHAR(100);
UPDATE stu SET address='北京' WHERE id = 3;
INSERT INTO stu VALUES(4,'孙行者','1852-9-5','男',2000,'上海'); 

ALTER TABLE stu ADD math INT;
ALTER TABLE stu ADD english INT;
UPDATE stu SET math = 95,english=74 WHERE id=4;

-- 查询学生的地址，去掉重复的记录
SELECT DISTINCT address FROM stu;
-- 给所有学生的数学成绩加5分
SELECT math+5 FROM stu;
-- 查询math和english的和(as可以省略)
SELECT *, (math+english) AS 总成绩 FROM stu;


-- 准备表student3
CREATE TABLE student3 (
id INT, -- 编号
NAME VARCHAR(20), -- 姓名
age INT, -- 年龄
sex VARCHAR(5), -- 性别
address VARCHAR(100), -- 地址
math INT, -- 数学
english INT -- 英语
);
INSERT INTO student3(id,NAME,age,sex,address,math,english) 
		VALUES  (1,'马云',55,'男','杭州',66,78),
			(2,'马化腾',45,'女','深圳',98,87),
			(3,'马景涛',55,'男','香港',56,77),
			(4,'柳岩',20,'女','湖南',76,65),
			(5,'柳青',20,'男','湖南',86,NULL),
			(6,'刘德华',57,'男','香港',99,99),
			(7,'马德',22,'女','香港',99,99),
			(8,'德玛西亚',18,'男','南京',56,65);
SELECT * FROM student3
-- in 里面的每个数据都会作为一次条件，只要满足条件的就会显示
-- 查询id=1,3,5的学生
SELECT * FROM student3 WHERE id IN(1,3,5);
SELECT * FROM student3 WHERE id NOT IN(1,3,5);
-- 查询 english 成绩大于等于 75，且小于等于 90 的学生
-- 查询姓马的学生
SELECT * FROM student3 WHERE NAME LIKE '马%';
-- 查询姓名中包含‘德字’的学生
SELECT * FROM student3 WHERE NAME LIKE '%德%';
-- 查询姓为‘马’且名字只有两个字的学生
SELECT * FROM student3 WHERE NAME LIKE '马_';
-- 查询所有数据， 使用年龄降序排序(asc:升序[默认的，可不写] desc:降序)
SELECT * FROM student3 ORDER BY age DESC;
-- 查询所有数据,在年龄降序排序的基础上，如果年龄相同再以数学成绩升序排序
SELECT * FROM student ORDER BY age DESC, math ASC;

SELECT * FROM student3;
DROP TABLE student;
RENAME TABLE student3 TO student;
CREATE TABLE student3 LIKE student;
INSERT INTO student3 SELECT * FROM student; -- 将表stu3中的所有内容复制到stu中

-- 查询学生的总人数(聚合函数sum max min count avg)
SELECT COUNT(id) 总人数 FROM student;
-- 如id字段有Null值  将不统计
SELECT COUNT(IFNULL(id,0)) FROM student;

-- 按性别分组，求男生和女生的总分
SELECT sex, AVG(math+english) FROM student GROUP BY sex;
-- 查询年龄大于25岁的人，按性别分组，统计每组的人数
SELECT sex, COUNT(id) FROM student WHERE age > 25 GROUP BY sex;

-- 查询学生表中数据，从第 3 条开始显示，显示 6 条。
SELECT * FROM student LIMIT 2,6

-- 分页，每页显示三条数据
SELECT * FROM student LIMIT 0,3
SELECT * FROM student LIMIT 3,3
SELECT * FROM student LIMIT 6,3